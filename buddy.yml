---
apiVersion: v1
kind: Namespace
metadata:
  name: demo-namespace
---
apiVersion: v1
kind: Pod
metadata:
  name: running-pod-1
  namespace: demo-namespace
spec:
  containers:
  - name: nginx
    image: nginx
---
apiVersion: v1
kind: Pod
metadata:
  name: running-pod-2
  namespace: demo-namespace
spec:
  containers:
  - name: alpine
    image: alpine
    command: ["sleep", "3600"]
---
apiVersion: v1
kind: Pod
metadata:
  name: failed-pod-1
  namespace: demo-namespace
spec:
  containers:
  - name: busybox
    image: busybox
    command: ["/bin/false"]
---
apiVersion: v1
kind: Pod
metadata:
  name: pending-pod-1
  namespace: demo-namespace
spec:
  containers:
  - name: nginx
    image: nginx
    resources:
      limits:
        cpu: "100"
---
apiVersion: apps/v1
kind: ReplicaSet
metadata:
  name: my-replicaset
  namespace: demo-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: nginx
        image: nginx
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-deployment
  namespace: demo-namespace
spec:
  replicas: 3
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: nginx
        image: nginx
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: my-statefulset
  namespace: demo-namespace
spec:
  serviceName: "stateful-service"
  replicas: 2
  selector:
    matchLabels:
      app: stateful-app
  template:
    metadata:
      labels:
        app: stateful-app
    spec:
      containers:
      - name: nginx
        image: nginx
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: my-daemonset
  namespace: demo-namespace
spec:
  selector:
    matchLabels:
      app: daemon-app
  template:
    metadata:
      labels:
        app: daemon-app
    spec:
      containers:
      - name: nginx
        image: nginx
---
apiVersion: batch/v1
kind: Job
metadata:
  name: my-job
  namespace: demo-namespace
spec:
  completions: 3
  template:
    spec:
      containers:
      - name: busybox
        image: busybox
        command: ["/bin/sh", "-c", "echo Hello; sleep 5"]
      restartPolicy: Never
---
apiVersion: batch/v1
kind: CronJob
metadata:
  name: my-cronjob
  namespace: demo-namespace
spec:
  schedule: "*/5 * * * *"
  jobTemplate:
    spec:
      template:
        spec:
          containers:
          - name: busybox
            image: busybox
            command: ["/bin/sh", "-c", "date"]
          restartPolicy: OnFailure
---
apiVersion: v1
kind: Service
metadata:
  name: my-service
  namespace: demo-namespace
spec:
  selector:
    app: my-app
  ports:
  - protocol: TCP
    port: 80
    targetPort: 80
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
  namespace: demo-namespace
data:
  key1: "value1"
  key2: "value2"
---
apiVersion: v1
kind: Secret
metadata:
  name: my-secret
  namespace: demo-namespace
stringData:
  password: "mypassword"
  token: "securetoken"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: my-pv
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteOnce
  hostPath:
    path: "/mnt/data"
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: my-pvc
  namespace: demo-namespace
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 500Mi
---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: my-storageclass
provisioner: kubernetes.io/no-provisioner
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-ingress
  namespace: demo-namespace
spec:
  rules:
  - host: my-app.local
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: my-service
            port:
              number: 80
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: my-network-policy
  namespace: demo-namespace
spec:
  podSelector:
    matchLabels:
      app: my-app
  policyTypes:
  - Ingress
  - Egress
---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: my-pdb
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: my-app

---
apiVersion: v1
kind: LimitRange
metadata:
  name: my-limit-range
spec:
  limits:
  - max:
      memory: 512Mi
      cpu: 1
    min:
      memory: 32Mi
      cpu: 100m
    type: Container

---
apiVersion: v1
kind: ResourceQuota
metadata:
  name: my-resource-quota
spec:
  hard:
    requests.cpu: "5"
    requests.memory: 5Gi
    limits.cpu: "10"
    limits.memory: 10Gi
    pods: "5"
    services: "3"
    persistentvolumeclaims: "3"
